{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/RequestReset.js\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION(\n    $email: String!\n  ) {\n    sendUserPasswordResetLink(email: $email}) {\n      id\n      name\n      email\n    }\n  }\n`;\nexport default function RequestReset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\"\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting\n\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({\n      data,\n      loading,\n      error\n    });\n    resetForm(); // send email and password to graphqlAPI\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signed up with \", data.createUser.email, \" - Go ahead and sign in!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request Reset!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/RequestReset.js"],"names":["Form","useForm","gql","useMutation","CURRENT_USER_QUERY","Error","REQUEST_RESET_MUTATION","RequestReset","inputs","handleChange","resetForm","email","signup","data","loading","error","variables","refetchQueries","query","handleSubmit","e","preventDefault","res","catch","console","log","createUser"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,sBAAsB,GAAGJ,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAe,SAASK,YAAT,GAAwB;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCT,OAAO,CAAC;AAClDU,IAAAA,KAAK,EAAE;AAD2C,GAAD,CAAnD;AAGA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAT,IAAqCZ,WAAW,CACpDG,sBADoD,EAEpD;AACEU,IAAAA,SAAS,EAAER,MADb;AAEE;AACAS,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD;AAHlB,GAFoD,CAAtD;;AASA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CACT;;AACpB,UAAMC,GAAG,GAAG,MAAMV,MAAM,GAAGW,KAAT,CAAeC,OAAO,CAACT,KAAvB,CAAlB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAZ;AACAL,IAAAA,SAAS,GALoB,CAM7B;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEa,UAAN,kBACC;AAAA,sCAAmBb,IAAI,CAACa,UAAL,CAAgBf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEH,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD","sourcesContent":["import Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION(\n    $email: String!\n  ) {\n    sendUserPasswordResetLink(email: $email}) {\n      id\n      name\n      email\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: \"\",\n  });\n  const [signup, { data, loading, error }] = useMutation(\n    REQUEST_RESET_MUTATION,\n    {\n      variables: inputs,\n      // refetch the currently logged in user\n      refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    }\n  );\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({ data, loading, error });\n    resetForm();\n    // send email and password to graphqlAPI\n  }\n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Request a Password Reset</h2>\n      <Error error={error} />\n      <fieldset>\n        {data?.createUser && (\n          <p>Signed up with {data.createUser.email} - Go ahead and sign in!</p>\n        )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Request Reset!</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}