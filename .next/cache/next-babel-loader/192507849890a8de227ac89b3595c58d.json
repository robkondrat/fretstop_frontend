{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, useState, createContext } from \"react\";\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  var _useState = useState(false),\n      cartOpen = _useState.cartOpen,\n      setCartOpen = _useState.setCartOpen;\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n\n  function closeCart() {\n    setCartOpen(false);\n  }\n\n  function openCart() {\n    setCartOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen,\n      toggleCart: toggleCart,\n      closeCart: closeCart,\n      openCart: openCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_s(CartStateProvider, \"JYp7lFiztKOUdn9UAtUwXyAImGQ=\");\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s2();\n\n  // we use a consumer here to access teh local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s2(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js"],"names":["useContext","useState","createContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","toggleCart","closeCart","openCart","useCart","all"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,aAA/B,QAAoD,OAApD;AAEA,IAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;AACA,IAAME,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACvC;AADuC,kBAENN,QAAQ,CAAC,KAAD,CAFF;AAAA,MAEhCO,QAFgC,aAEhCA,QAFgC;AAAA,MAEtBC,WAFsB,aAEtBA,WAFsB;;AAIvC,WAASC,UAAT,GAAsB;AACpBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AACD,WAASG,SAAT,GAAqB;AACnBF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,WAASG,QAAT,GAAoB;AAClBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,UAAU,EAAVA,UAAZ;AAAwBC,MAAAA,SAAS,EAATA,SAAxB;AAAmCC,MAAAA,QAAQ,EAARA;AAAnC,KAA3B;AAAA,cAA2EL;AAA3E;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;GAlBSD,iB;;KAAAA,iB;;AAmBT,SAASO,OAAT,GAAmB;AAAA;;AACjB;AACA,MAAMC,GAAG,GAAGd,UAAU,CAACG,iBAAD,CAAtB;AACA,SAAOW,GAAP;AACD;;IAJQD,O;;AAMT,SAASP,iBAAT,EAA4BO,OAA5B","sourcesContent":["import { useContext, useState, createContext } from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  const {cartOpen, setCartOpen } = useState(false);\n\n  function toggleCart() {\n    setCartOpen(!cartOpen);\n  }\n  function closeCart() {\n    setCartOpen(false);\n  }\n  function openCart() {\n    setCartOpen(true);\n  }\n  return (\n    <LocalStateProvider value={{ cartOpen, toggleCart, closeCart, openCart }}>{children}</LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // we use a consumer here to access teh local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}