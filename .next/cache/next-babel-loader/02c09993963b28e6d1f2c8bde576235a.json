{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js\";\nimport { useMutation } from \"@apollo/client\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/dist/client/router\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCart } from \"../lib/cartState\";\nimport SickButton from \"./styles/SickButton\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);background:var(--lightBlue);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, {\n    error: GraphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  const router = useRouter();\n  const {\n    closeCart\n  } = useCart();\n\n  async function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    setLoading(true); // 2. start page transition\n\n    nProgress.start(); // 3. create payment method via stripe (token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    }); // 4. handle any errors from stripe\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    } // 5. send token to keystone server via a custom mutation\n\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    }); // 6. change the page to view the order\n\n    router.push({\n      pathname: `/order/[id]`,\n      query: {\n        id: order.data.checkout.id\n      }\n    }); // 7. close the cart\n\n    closeCart(); // 8. turn the loader off\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), GraphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: GraphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js"],"names":["useMutation","CardElement","Elements","useElements","useStripe","loadStripe","GraphQLError","gql","useRouter","nProgress","useState","styled","useCart","SickButton","CURRENT_USER_QUERY","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","refetchQueries","query","router","closeCart","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","push","pathname","data","fontSize","color","message","Checkout"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/dist/client/router\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCart } from \"../lib/cartState\";\nimport SickButton from \"./styles/SickButton\";\nimport { CURRENT_USER_QUERY } from \"./User\";\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  /* background: var(--offWhite); */\n  background: var(--lightBlue);\n\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, { error: GraphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION,\n    {\n      refetchQueries: [{ query: CURRENT_USER_QUERY }],\n    }\n  );\n  const router = useRouter();\n  const { closeCart } = useCart();\n\n  async function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    setLoading(true);\n    // 2. start page transition\n    nProgress.start();\n    // 3. create payment method via stripe (token comes back here if successful)\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    // 4. handle any errors from stripe\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n    // 5. send token to keystone server via a custom mutation\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id,\n      },\n    });\n    // 6. change the page to view the order\n    router.push({\n      pathname: `/order/[id]`,\n      query: { id: order.data.checkout.id },\n    });\n    // 7. close the cart\n    closeCart();\n    // 8. turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>{error.message}</p>\n      )}\n      {GraphQLError && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>\n          {GraphQLError.message}\n        </p>\n      )}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}