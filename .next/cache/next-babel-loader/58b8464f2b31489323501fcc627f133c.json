{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/DeleteGuitar.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst DELETE_GUITAR_MUTATION = gql`\n  mutation DELETE_GUITAR_MUTATION($id: ID!) {\n    deleteGuitar(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteGuitar));\n}\n\nexport default function DeleteGuitar({\n  id,\n  children\n}) {\n  const [deleteGuitar, {\n    loading,\n    error\n  }] = useMutation(DELETE_GUITAR_MUTATION, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm(\"Are you sure you want to delete this guitar?\")) {\n        console.log(\"DELETE\");\n        deleteGuitar().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/DeleteGuitar.js"],"names":["useMutation","gql","DELETE_GUITAR_MUTATION","update","cache","payload","evict","identify","data","deleteGuitar","DeleteGuitar","id","children","loading","error","variables","confirm","console","log","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,sBAAsB,GAAGD,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC9BD,EAAAA,KAAK,CAACE,KAAN,CAAYF,KAAK,CAACG,QAAN,CAAeF,OAAO,CAACG,IAAR,CAAaC,YAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAtB,EAAwC;AACrD,QAAM,CAACH,YAAD,EAAe;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAf,IAAqCd,WAAW,CAACE,sBAAD,EAAyB;AAC7Ea,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS,KADkE;AAI7ER,IAAAA;AAJ6E,GAAzB,CAAtD;AAOA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEU,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIG,OAAO,CAAC,8CAAD,CAAX,EAA6D;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAT,QAAAA,YAAY,GAAGU,KAAf,CAAqBC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAjC;AACD;AACF,KARH;AAAA,cAUGV;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst DELETE_GUITAR_MUTATION = gql`\n  mutation DELETE_GUITAR_MUTATION($id: ID!) {\n    deleteGuitar(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  cache.evict(cache.identify(payload.data.deleteGuitar))\n}\n\nexport default function DeleteGuitar({ id, children }) {\n  const [deleteGuitar, { loading, error }] = useMutation(DELETE_GUITAR_MUTATION, {\n    variables: {\n      id,\n    },\n    update,\n  });\n\n  return (\n    <button\n      type=\"button\"\n      disabled={loading}\n      onClick={() => {\n        if (confirm(\"Are you sure you want to delete this guitar?\")) {\n          console.log(\"DELETE\");\n          deleteGuitar().catch(err => alert(err.message));\n        }\n      }}\n    >\n      {children}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}