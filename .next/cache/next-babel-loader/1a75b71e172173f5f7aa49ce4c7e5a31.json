{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js\";\nimport { useContext } from \"react\";\nimport { createContext } from \"react\";\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  const {\n    cartOpen,\n    setCartOpen\n  } = false;\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\nfunction useCart() {\n  // we use a consumer here to access teh local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js"],"names":["useContext","createContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,MAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;AACA,MAAME,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA2B,KAAjC;AAEA,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA3B;AAAA,cAA0CD;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;AACA,SAASG,OAAT,GAAmB;AACjB;AACA,QAAMC,GAAG,GAAGV,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACD;;AAED,SAASL,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { useContext } from \"react\";\nimport { createContext } from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  const {cartOpen, setCartOpen } = false;\n\n  return (\n    <LocalStateProvider value={{ cartOpen }}>{children}</LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // we use a consumer here to access teh local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}