{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { createContext } from \"react\";\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  var children = _ref.children;\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  var _false = false,\n      cartOpen = _false.cartOpen,\n      setCartOpen = _false.setCartOpen;\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n} // make a custom hook for accessing the cart local state\n\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s();\n\n  // we use a consumer here to access teh local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/cartState.js"],"names":["useContext","createContext","LocalStateContext","LocalStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,IAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;AACA,IAAME,kBAAkB,GAAGD,iBAAiB,CAACE,QAA7C;;AAEA,SAASC,iBAAT,OAAyC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACvC;AADuC,eAEN,KAFM;AAAA,MAEhCC,QAFgC,UAEhCA,QAFgC;AAAA,MAEtBC,WAFsB,UAEtBA,WAFsB;AAIvC,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAA3B;AAAA,cAA0CD;AAA1C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;KATSD,iB;;AAUT,SAASI,OAAT,GAAmB;AAAA;;AACjB;AACA,MAAMC,GAAG,GAAGV,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACD;;GAJQD,O;;AAMT,SAASJ,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { useContext } from \"react\";\nimport { createContext } from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // this is our own custom provider! we will store data (state) and functionality (updaters) in here and anyone can access it via the consumer\n  const {cartOpen, setCartOpen } = false;\n\n  return (\n    <LocalStateProvider value={{ cartOpen }}>{children}</LocalStateProvider>\n  );\n}\n\n// make a custom hook for accessing the cart local state\nfunction useCart() {\n  // we use a consumer here to access teh local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}