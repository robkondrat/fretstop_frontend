{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ORDER_QUERY($id: ID!) {\\n    order: Order(where: { id: $id}) {\\n      id\\n      charge\\n      total\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hey \", query.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/pages/order/[id].js"],"names":["useQuery","gql","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAyBA,eAAe,SAASE,eAAT,OAAoC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBAChBJ,QAAQ,CAACE,kBAAD,EAAqB;AAC5DG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAFA;AAAF;AADiD,GAArB,CADQ;AAAA,MACzCC,IADyC,aACzCA,IADyC;AAAA,MACnCC,KADmC,aACnCA,KADmC;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;;AAKjD,sBACE;AAAA,uBAAUL,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GARuBH,e;UACWH,Q;;;KADXG,e","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\"\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order: Order(where: { id: $id}) {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleOrderPage({ query }) {\n  const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: { id}\n  })\n  \n  return (\n    <div>hey {query.id}</div>\n  )\n}"]},"metadata":{},"sourceType":"module"}