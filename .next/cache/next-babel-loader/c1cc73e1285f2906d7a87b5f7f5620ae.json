{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SingleGuitar.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        image {\n          publicUrlTransformed\n        }\n        \n      }\n    }\n  }\n`;\nexport default function SingleGuitar({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 21\n  }, this);\n  const {\n    Guitar\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Guitar.photo.image.publicUrlTransformed,\n      alt: Guitar.photo.image.altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Guitar.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Guitar.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SingleGuitar.js"],"names":["useQuery","gql","DisplayError","SINGLE_GUITAR_QUERY","SingleGuitar","id","data","loading","error","variables","Guitar","photo","image","publicUrlTransformed","altText","name","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,mBAAmB,GAAGF,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,eAAe,SAASG,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA8B;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACG,mBAAD,EAAsB;AAC7DM,IAAAA,SAAS,EAAE;AACTJ,MAAAA,EAAE,EAAEA;AADK;AADkD,GAAtB,CAAzC;AAKA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEE,IAAAA;AAAF,MAAaJ,IAAnB;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEI,MAAM,CAACC,KAAP,CAAaC,KAAb,CAAmBC,oBAA7B;AAAmD,MAAA,GAAG,EAAEH,MAAM,CAACC,KAAP,CAAaC,KAAb,CAAmBE;AAA3E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKJ,MAAM,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIL,MAAM,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\n\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        image {\n          publicUrlTransformed\n        }\n        \n      }\n    }\n  }\n`;\n\nexport default function SingleGuitar({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id,\n    },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <DisplayError error={error} />;\n  const { Guitar } = data;\n  return (\n    <div>\n      <img src={Guitar.photo.image.publicUrlTransformed} alt={Guitar.photo.image.altText} />\n      <div className=\"details\">\n        <h2>{Guitar.name}</h2>\n        <p>{Guitar.description}</p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}