{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_GUITAR_QUERY($id: ID!) {\\n    Guitar(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nvar SINGLE_GUITAR_QUERY = gql(_templateObject());\nexport default function UpdateGuitar(_ref) {\n  var id = _ref.id;\n  // 1. need to get existing guitar\n  var _useQuery = useQuery,\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // 2. need to get mutation to update the guitar\n  // 3. need the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update \", id, \"!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = UpdateGuitar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGuitar\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js"],"names":["gql","SINGLE_GUITAR_QUERY","UpdateGuitar","id","useQuery","data","error","loading"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,mBAAmB,GAAGD,GAAH,mBAAzB;AAWA,eAAe,SAASE,YAAT,OAA8B;AAAA,MAANC,EAAM,QAANA,EAAM;AAC3C;AAD2C,kBAEVC,QAFU;AAAA,MAEnCC,IAFmC,aAEnCA,IAFmC;AAAA,MAE7BC,KAF6B,aAE7BA,KAF6B;AAAA,MAEtBC,OAFsB,aAEtBA,OAFsB,EAG3C;AACA;;AACA,sBACE;AAAA,0BAAWJ,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KARuBD,Y","sourcesContent":["import gql from \"graphql-tag\"\n\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nexport default function UpdateGuitar({ id }) {\n  // 1. need to get existing guitar\n  const { data, error, loading } = useQuery\n  // 2. need to get mutation to update the guitar\n  // 3. need the form to handle the updates\n  return (\n    <p>Update {id}!</p>\n  )\n}"]},"metadata":{},"sourceType":"module"}