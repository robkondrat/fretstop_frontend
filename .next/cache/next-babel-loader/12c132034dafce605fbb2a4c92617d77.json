{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_GUITAR_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateGuitar(\\n      id: $id\\n      data: { id: $id, name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_GUITAR_QUERY($id: ID!) {\\n    Guitar(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\nvar SINGLE_GUITAR_QUERY = gql(_templateObject());\nvar UPDATE_GUITAR_MUTATION = gql(_templateObject2());\nexport default function UpdateGuitar(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useMutation = useMutation(UPDATE_GUITAR_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateGuitar = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading; // 2.5 create some state for the form inputs\n\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Guitar),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this); // 3. need the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                res = updateGuitar({\n                  variables: {\n                    id: id\n                  }\n                });\n                console.log(res); // submit the input fields to the backend:\n                // const res = await createGuitar();\n                // clearForm();\n                // Router.push({\n                //   pathname: `/product/${res.data.createGuitar.id}`,\n                // });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: updateLoading,\n      \"aria-busy\": updateLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Guitar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateGuitar, \"4HH+ijCYDhaXjLyWtoUu1kZ6Gyk=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateGuitar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGuitar\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js"],"names":["useMutation","useQuery","gql","useForm","DisplayError","Form","SINGLE_GUITAR_QUERY","UPDATE_GUITAR_MUTATION","UpdateGuitar","id","variables","data","error","loading","updateGuitar","updateData","updateError","updateLoading","Guitar","inputs","handleChange","clearForm","resetForm","console","log","e","preventDefault","res","name","price","description"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport DisplayError from \"./ErrorMessage\";\nimport Form from \"./styles/Form\";\n\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nconst UPDATE_GUITAR_MUTATION = gql`\n  mutation UPDATE_GUITAR_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateGuitar(\n      id: $id\n      data: { id: $id, name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nexport default function UpdateGuitar({ id }) {\n  const { data, error, loading } = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id,\n    },\n  });\n\n  const [\n    updateGuitar,\n    { data: updateData, error: updateError, loading: updateLoading },\n  ] = useMutation(UPDATE_GUITAR_MUTATION);\n  // 2.5 create some state for the form inputs\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Guitar);\n  console.log(inputs)\n  if (loading) return <p>Loading...</p>;\n\n  // 3. need the form to handle the updates\n  return (\n    <Form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        const res = updateGuitar({\n          variables: {\n            id: id,\n            \n          }\n        });\n        console.log(res);\n        // submit the input fields to the backend:\n        // const res = await createGuitar();\n        // clearForm();\n        // Router.push({\n        //   pathname: `/product/${res.data.createGuitar.id}`,\n        // });\n      }}\n    >\n      <DisplayError error={error || updateError} />\n      <fieldset disabled={updateLoading} aria-busy={updateLoading}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n      </fieldset>\n\n      <button type=\"submit\">Update Guitar</button>\n\n      {/* <button type=\"button\" onClick={clearForm}>Clear Form</button>\n      <button type=\"button\" onClick={resetForm}>Reset Form</button> */}\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}