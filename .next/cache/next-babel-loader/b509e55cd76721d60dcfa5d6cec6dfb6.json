{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n    checkout(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);background:var(--lightBlue);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      GraphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. stop form from submitting and turn loader on\n              e.preventDefault();\n              setLoading(true); // 2. start page transition\n\n              nProgress.start(); // 3. create payment method via stripe (token comes back here if successful)\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. handle any errors from stripe\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.next = 15;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 15:\n              order = _context.sent;\n              console.log(\"Fnis\"); // 6. change the page to view the order\n              // 7. close the cart\n              // 8. turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), GraphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: GraphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"okdnxbB383OES/+KJ1zMj7Ajde0=\", false, function () {\n  return [useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js"],"names":["useMutation","CardElement","Elements","useElements","useStripe","loadStripe","GraphQLError","gql","nProgress","useState","styled","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","done","variables","token","id","order","fontSize","color","message","Checkout"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  /* background: var(--offWhite); */\n  background: var(--lightBlue);\n\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, { error: GraphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION\n  );\n\n  async function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    setLoading(true);\n    // 2. start page transition\n    nProgress.start();\n    // 3. create payment method via stripe (token comes back here if successful)\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    // 4. handle any errors from stripe\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n    // 5. send token to keystone server via a custom mutation\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Fnis`)\n    // 6. change the page to view the order\n    // 7. close the cart\n    // 8. turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>{error.message}</p>\n      )}\n      {GraphQLError && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>\n          {GraphQLError.message}\n        </p>\n      )}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}