{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\\n    authenticateUserWithPassword(email: $email, password: $password) {\\n      ... on UserAuthenticationWithPasswordSuccess {\\n        item {\\n          id\\n          email\\n          name\\n        }\\n      }\\n      ... on UserAuthenticationWithPasswordFailure {\\n        code\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nvar SIGNIN_MUTATION = gql(_templateObject());\nexport default function SignIn() {\n  _s();\n\n  var _useForm = useForm({\n    email: \"\",\n    password: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signin = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); //stop form from submitting\n\n              _context.next = 3;\n              return signin();\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              resetForm(); // send email and password to graphqlAPI\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  var error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"\";\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"6PwOUuAryFBQuJ7EcECFqGPaK8o=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SignIn.js"],"names":["Form","useForm","gql","useMutation","CURRENT_USER_QUERY","Error","SIGNIN_MUTATION","SignIn","email","password","inputs","handleChange","resetForm","variables","refetchQueries","query","signin","data","loading","handleSubmit","e","preventDefault","res","console","log","error","authenticateUserWithPassword","__typename"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,eAAe,GAAGJ,GAAH,mBAArB;AAkBA,eAAe,SAASK,MAAT,GAAkB;AAAA;;AAAA,iBACaN,OAAO,CAAC;AAClDO,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CADpB;AAAA,MACvBC,MADuB,YACvBA,MADuB;AAAA,MACfC,YADe,YACfA,YADe;AAAA,MACDC,SADC,YACDA,SADC;;AAAA,qBAKKT,WAAW,CAACG,eAAD,EAAkB;AAC/DO,IAAAA,SAAS,EAAEH,MADoD;AAE/D;AACAI,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAAD;AAH+C,GAAlB,CALhB;AAAA;AAAA,MAKxBY,MALwB;AAAA;AAAA,MAKdC,IALc,kBAKdA,IALc;AAAA,MAKRC,OALQ,kBAKRA,OALQ;;AAAA,WAWhBC,YAXgB;AAAA;AAAA;;AAAA;AAAA,6EAW/B,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF,GADF,CACsB;;AADtB;AAAA,qBAEoBL,MAAM,EAF1B;;AAAA;AAEQM,cAAAA,GAFR;AAGEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,cAAAA,SAAS,GAJX,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAX+B;AAAA;AAAA;;AAmB/B,MAAMa,KAAK,GAAG,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,4BAAN,CAAmCC,UAAnC,MAAkD,EAAhE;AAGA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAER,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EACHF,IADG,aACHA,IADG,uBACHA,IAAI,CAAES;AAFV;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEhB,MAAM,CAACF,KALhB;AAME,UAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACD,QALhB;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAzDuBJ,M;UACsBN,O,EAIRE,W;;;KALdI,M","sourcesContent":["import Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\nexport default function SignIn() {\n  const { inputs, handleChange, resetForm } = useForm({\n    email: \"\",\n    password: \"\",\n  });\n  const [signin, { data, loading }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //stop form from submitting\n    const res = await signin();\n    console.log(res);\n    resetForm();\n    // send email and password to graphqlAPI\n  }\n\n  const error = data?.authenticateUserWithPassword.__typename === \"\"\n\n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Sign Into Your Account</h2>\n      <Error\n        error={\n          data?.authenticateUserWithPassword\n        }\n      />\n      <fieldset>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Sign In!</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}