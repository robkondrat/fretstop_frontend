{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/CreateGuitar.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nimport DisplayError from './ErrorMessage';\nconst CREATE_GUITAR_MUTATION = gql`\n  mutation CREATE_GUITAR_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createGuitar(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\nexport default function CreateGuitar() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    name: \"\",\n    price: null,\n    description: \"Brand, Type, Color, etc.\",\n    image: \"\"\n  });\n  const [createGuitar, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_GUITAR_MUTATION, {\n    variables: inputs\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault(); // submit the input fields to the backend:\n\n      const res = await createGuitar();\n      clearForm();\n    },\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+ Add Guitar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/CreateGuitar.js"],"names":["useMutation","gql","useForm","Form","DisplayError","CREATE_GUITAR_MUTATION","CreateGuitar","inputs","handleChange","clearForm","resetForm","name","price","description","image","createGuitar","loading","error","data","variables","e","preventDefault","res"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nimport DisplayError from './ErrorMessage';\n\nconst CREATE_GUITAR_MUTATION = gql`\n  mutation CREATE_GUITAR_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createGuitar(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\n\nexport default function CreateGuitar() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    name: \"\",\n    price: null,\n    description: \"Brand, Type, Color, etc.\",\n    image: \"\",\n  });\n\n  const [createGuitar, { loading, error, data }] = useMutation(\n    CREATE_GUITAR_MUTATION,\n    {\n      variables: inputs,\n    }\n  );\n\n  return (\n    <Form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        // submit the input fields to the backend:\n        const res = await createGuitar();\n        clearForm();\n      }}\n    >\n      <DisplayError error={error}/>\n      <fieldset disabled={loading} aria-busy={loading}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"Price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"image\">\n          Image\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleChange} />\n        </label>\n      </fieldset>\n\n      <button type=\"submit\">+ Add Guitar</button>\n\n      {/* <button type=\"button\" onClick={clearForm}>Clear Form</button>\n      <button type=\"button\" onClick={resetForm}>Reset Form</button> */}\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}