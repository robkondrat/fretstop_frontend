{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/CreateGuitar.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_GUITAR_MUTATION(\\n    $name: String!\\n    $description: String!\\n    $price: Int!\\n    $image: Upload\\n  ) {\\n    createGuitar(\\n      data: {\\n        name: $name\\n        description: $description\\n        price: $price\\n        status: \\\"AVAILABLE\\\"\\n        photo: { create: { image: $image, altText: $name } }\\n      }\\n    ) {\\n      id\\n      price\\n      description\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nimport DisplayError from \"./ErrorMessage\";\nimport { ALL_GUITARS_QUERY } from \"./Guitars\";\nimport Router from \"next/router\";\nvar CREATE_GUITAR_MUTATION = gql(_templateObject());\nexport default function CreateGuitar() {\n  _s();\n\n  var _useForm = useForm({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    image: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(CREATE_GUITAR_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_GUITARS_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createGuitar = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // submit the input fields to the backend:\n\n                _context.next = 3;\n                return createGuitar();\n\n              case 3:\n                res = _context.sent;\n                clearForm();\n                Router.push({\n                  pathname: \"/product/\".concat(res.data.createGuitar.id)\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+ Add Guitar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateGuitar, \"8Un/pPZ098QeT1ownhMk/zbdX0c=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreateGuitar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGuitar\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/CreateGuitar.js"],"names":["useMutation","gql","useForm","Form","DisplayError","ALL_GUITARS_QUERY","Router","CREATE_GUITAR_MUTATION","CreateGuitar","name","price","description","image","inputs","handleChange","clearForm","resetForm","variables","refetchQueries","query","createGuitar","loading","error","data","e","preventDefault","res","push","pathname","id"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nimport DisplayError from \"./ErrorMessage\";\nimport { ALL_GUITARS_QUERY } from \"./Guitars\";\nimport Router from \"next/router\";\n\nconst CREATE_GUITAR_MUTATION = gql`\n  mutation CREATE_GUITAR_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createGuitar(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\n\nexport default function CreateGuitar() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    image: \"\",\n  });\n\n  const [createGuitar, { loading, error, data }] = useMutation(\n    CREATE_GUITAR_MUTATION,\n    {\n      variables: inputs,\n      refetchQueries: [{ query: ALL_GUITARS_QUERY }],\n    }\n  );\n\n  return (\n    <Form\n      onSubmit={async (e) => {\n        e.preventDefault();\n        // submit the input fields to the backend:\n        const res = await createGuitar();\n        clearForm();\n        Router.push({\n          pathname: `/product/${res.data.createGuitar.id}`,\n        });\n      }}\n    >\n      <DisplayError error={error} />\n      <fieldset disabled={loading} aria-busy={loading}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Price\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={inputs.price}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={inputs.description}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"image\">\n          Image\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleChange} />\n        </label>\n      </fieldset>\n\n      <button type=\"submit\">+ Add Guitar</button>\n\n      {/* <button type=\"button\" onClick={clearForm}>Clear Form</button>\n      <button type=\"button\" onClick={resetForm}>Reset Form</button> */}\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}