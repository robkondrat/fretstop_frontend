{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Guitars.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_GUITARS_QUERY {\\n    allGuitars {\\n      id\\n      name\\n      price\\n      description\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar ALL_GUITARS_QUERY = gql(_templateObject());\nexport default function Guitars() {\n  _s();\n\n  var _useQuery = useQuery(ALL_GUITARS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guitars, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Guitars;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guitars\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Guitars.js"],"names":["useQuery","gql","ALL_GUITARS_QUERY","Guitars","data","error","loading","message"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;AAiBA,eAAe,SAASE,OAAT,GAAmB;AAAA;;AAAA,kBACCH,QAAQ,CAACE,iBAAD,CADT;AAAA,MACxBE,IADwB,aACxBA,IADwB;AAAA,MAClBC,KADkB,aAClBA,KADkB;AAAA,MACXC,OADW,aACXA,OADW;;AAEhC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GATuBJ,O;UACWH,Q;;;KADXG,O","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst ALL_GUITARS_QUERY = gql`\n  query ALL_GUITARS_QUERY {\n    allGuitars {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Guitars() {\n  const { data, error, loading } = useQuery(ALL_GUITARS_QUERY);\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: {error.message}</p>\n  return (\n    <div>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}