{"ast":null,"code":"import gql from \"graphql-tag\";\nimport { PAGINATION_QUERY } from '../components/Pagination';\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var _data$_allGuitarsMeta;\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      var count = data === null || data === void 0 ? void 0 : (_data$_allGuitarsMeta = data._allGuitarsMeta) === null || _data$_allGuitarsMeta === void 0 ? void 0 : _data$_allGuitarsMeta.count;\n      var page = skip / first + 1;\n      var pages = Math.ceil(count / first);\n      c;\n    },\n    merge: function merge() {}\n  };\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/paginationField.js"],"names":["gql","PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","skip","first","data","readQuery","query","count","_allGuitarsMeta","page","pages","Math","ceil","c","merge"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,IAFK,kBAEgC;AAAA;;AAAA,UAAhCC,QAAgC,uEAArB,EAAqB;;AAAA;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;;AAAA,UAC3BC,IAD2B,GACXF,IADW,CAC3BE,IAD2B;AAAA,UACrBC,KADqB,GACXH,IADW,CACrBG,KADqB;AAEnC,UAAMC,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAhB,CAAb;AACA,UAAMY,KAAK,GAAGH,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEI,eAAT,0DAAG,sBAAuBD,KAArC;AACA,UAAME,IAAI,GAAGP,IAAI,GAAGC,KAAP,GAAe,CAA5B;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGJ,KAAlB,CAAd;AACAU,MAAAA,CAAC;AACF,KATI;AAULC,IAAAA,KAVK,mBAUG,CAEP;AAZI,GAAP;AAcD","sourcesContent":["import gql from \"graphql-tag\";\nimport { PAGINATION_QUERY } from '../components/Pagination';\n\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read(existing = [], { args, cache }) {\n      const { skip, first } = args;\n      const data = cache.readQuery({ query: PAGINATION_QUERY});\n      const count = data?._allGuitarsMeta?.count;\n      const page = skip / first + 1;\n      const pages = Math.ceil(count / first);\n      c\n    },\n    merge() {\n\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}