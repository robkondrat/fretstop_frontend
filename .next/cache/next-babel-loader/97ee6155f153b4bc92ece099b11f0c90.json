{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);background:var(--lightBlue);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. stop form from submitting and turn loader on\n              e.preventDefault();\n              setLoading(true); // 2. start page transition\n\n              nProgress.start(); // 3. create payment method via stripe (token comes back here if successful)\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. handle any errors from stripe\n\n              if (error) {\n                setError(error);\n              } // 5. send token to keystone server via a custom mutation\n              // 6. change the page to view the order\n              // 7. close the cart\n              // 8. turn the loader off\n\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"/GTcQkkNlUgykvoAY6A4l3RHUP4=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js"],"names":["CardElement","Elements","useElements","useStripe","loadStripe","nProgress","useState","styled","SickButton","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","Checkout"],"mappings":";;;;;;;AAAA,SACEA,WADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAMC,kBAAkB,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,0KAAxB;KAAMD,kB;AAYN,IAAME,SAAS,GAAGP,UAAU,CAACQ,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACIT,QAAQ,EADZ;AAAA,MACfU,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEfY,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,MAAMkB,QAAQ,GAAGnB,WAAW,EAA5B;;AAJsB,WAMPoB,YANO;AAAA;AAAA;;AAAA;AAAA,6EAMtB,iBAA4BC,CAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE;AACAA,cAAAA,CAAC,CAACC,cAAF;AACAL,cAAAA,UAAU,CAAC,IAAD,CAAV,CAHF,CAIE;;AACAd,cAAAA,SAAS,CAACoB,KAAV,GALF,CAME;;AANF;AAAA,qBAOwCL,MAAM,CAACM,mBAAP,CAA2B;AAC/DC,gBAAAA,IAAI,EAAE,MADyD;AAE/DC,gBAAAA,IAAI,EAAEP,QAAQ,CAACQ,UAAT,CAAoB7B,WAApB;AAFyD,eAA3B,CAPxC;;AAAA;AAAA;AAOSgB,cAAAA,KAPT,yBAOSA,KAPT;AAOgBc,cAAAA,aAPhB,yBAOgBA,aAPhB;AAWEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ,EAXF,CAYE;;AACA,kBAAId,KAAJ,EAAW;AACTC,gBAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,eAfH,CAgBE;AACA;AACA;AACA;;;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANsB;AAAA;AAAA;;AA2BtB,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEM,YAA9B;AAAA,4BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlCQP,Y;UAGQZ,S,EACED,W;;;MAJVa,Y;;AAoCT,SAASkB,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEtB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQsB,Q;AAQT,SAASA,QAAT","sourcesContent":["import {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  /* background: var(--offWhite); */\n  background: var(--lightBlue);\n\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    setLoading(true);\n    // 2. start page transition\n    nProgress.start();\n    // 3. create payment method via stripe (token comes back here if successful)\n    const {error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod)\n    // 4. handle any errors from stripe\n    if (error) {\n      setError(error);\n    }\n    // 5. send token to keystone server via a custom mutation\n    // 6. change the page to view the order\n    // 7. close the cart\n    // 8. turn the loader off\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      \n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}