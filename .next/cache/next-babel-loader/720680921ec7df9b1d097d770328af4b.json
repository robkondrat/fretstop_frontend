{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n    checkout(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/dist/client/router\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCart } from \"../lib/cartState\";\nimport SickButton from \"./styles/SickButton\";\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);background:var(--lightBlue);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION, {}),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      GraphQLError = _useMutation2[1].error;\n\n  var router = useRouter();\n\n  var _useCart = useCart(),\n      closeCart = _useCart.closeCart;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod, order;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. stop form from submitting and turn loader on\n              e.preventDefault();\n              setLoading(true); // 2. start page transition\n\n              nProgress.start(); // 3. create payment method via stripe (token comes back here if successful)\n\n              _context.next = 5;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: elements.getElement(CardElement)\n              });\n\n            case 5:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. handle any errors from stripe\n\n              if (!error) {\n                _context.next = 13;\n                break;\n              }\n\n              setError(error);\n              nProgress.done();\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.next = 15;\n              return checkout({\n                variables: {\n                  token: paymentMethod.id\n                }\n              });\n\n            case 15:\n              order = _context.sent;\n              console.log(\"Finished with the order!!\");\n              console.log(order); // 6. change the page to view the order\n\n              router.push({\n                pathname: '/order',\n                query: {\n                  id: order.data.checkout.id\n                }\n              }); // 7. close the cart\n\n              closeCart(); // 8. turn the loader off\n\n              setLoading(false);\n              nProgress.done();\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), GraphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: ({\n        fontSize: 20\n      }, {\n        color: \"red\"\n      }),\n      children: GraphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"kC5keAKfJWAHNrVHzs7jpeUBO+A=\", false, function () {\n  return [useStripe, useElements, useMutation, useRouter, useCart];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js"],"names":["useMutation","CardElement","Elements","useElements","useStripe","loadStripe","GraphQLError","gql","useRouter","nProgress","useState","styled","useCart","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","router","closeCart","handleSubmit","e","preventDefault","start","createPaymentMethod","type","card","getElement","paymentMethod","console","log","done","variables","token","id","order","push","pathname","query","data","fontSize","color","message","Checkout"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { GraphQLError } from \"graphql\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/dist/client/router\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCart } from \"../lib/cartState\";\nimport SickButton from \"./styles/SickButton\";\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  /* background: var(--offWhite); */\n  background: var(--lightBlue);\n\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation CREATE_ORDER_MUTATION($token: String!) {\n    checkout(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [checkout, { error: GraphQLError }] = useMutation(\n    CREATE_ORDER_MUTATION, {\n      \n    }\n  );\n  const router = useRouter();\n  const { closeCart } = useCart();\n\n  async function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    setLoading(true);\n    // 2. start page transition\n    nProgress.start();\n    // 3. create payment method via stripe (token comes back here if successful)\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n    console.log(paymentMethod);\n    // 4. handle any errors from stripe\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n    // 5. send token to keystone server via a custom mutation\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    console.log(`Finished with the order!!`);\n    console.log(order);\n    // 6. change the page to view the order\n    router.push({\n      pathname: '/order',\n      query: { id: order.data.checkout.id}\n    });\n    // 7. close the cart\n    closeCart();\n    // 8. turn the loader off\n    setLoading(false);\n    nProgress.done();\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      {error && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>{error.message}</p>\n      )}\n      {GraphQLError && (\n        <p style={({ fontSize: 20 }, { color: \"red\" })}>\n          {GraphQLError.message}\n        </p>\n      )}\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}