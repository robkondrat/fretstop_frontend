{"ast":null,"code":"import gql from \"graphql-tag\";\nimport { PAGINATION_QUERY } from \"../components/Pagination\";\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var _data$_allGuitarsMeta;\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      var count = data === null || data === void 0 ? void 0 : (_data$_allGuitarsMeta = data._allGuitarsMeta) === null || _data$_allGuitarsMeta === void 0 ? void 0 : _data$_allGuitarsMeta.count;\n      var page = skip / first + 1;\n      var pages = Math.ceil(count / first);\n      var items = existing.slice(skip, skip + first).filter(function (x) {\n        return x;\n      });\n\n      if (items.length !== first) {\n        return false;\n      }\n\n      if (items.length) {\n        console.log(\"There are \".concat(items.length, \" in the cache! Sending them to apollo\"));\n        return items;\n      }\n\n      return false;\n    },\n    merge: function merge(existing, incoming, _ref2) {\n      var args = _ref2.args;\n      var merged = existing ? existing.slice(0) : [];\n    }\n  };\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/lib/paginationField.js"],"names":["gql","PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","skip","first","data","readQuery","query","count","_allGuitarsMeta","page","pages","Math","ceil","items","slice","filter","x","length","console","log","merge","incoming","merged"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,IAFK,kBAEgC;AAAA;;AAAA,UAAhCC,QAAgC,uEAArB,EAAqB;;AAAA;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;;AAAA,UAC3BC,IAD2B,GACXF,IADW,CAC3BE,IAD2B;AAAA,UACrBC,KADqB,GACXH,IADW,CACrBG,KADqB;AAEnC,UAAMC,IAAI,GAAGH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAhB,CAAb;AACA,UAAMY,KAAK,GAAGH,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEI,eAAT,0DAAG,sBAAuBD,KAArC;AACA,UAAME,IAAI,GAAGP,IAAI,GAAGC,KAAP,GAAe,CAA5B;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGJ,KAAlB,CAAd;AACA,UAAMU,KAAK,GAAGd,QAAQ,CAACe,KAAT,CAAeZ,IAAf,EAAqBA,IAAI,GAAGC,KAA5B,EAAmCY,MAAnC,CAA0C,UAACC,CAAD;AAAA,eAAOA,CAAP;AAAA,OAA1C,CAAd;;AACA,UAAGH,KAAK,CAACI,MAAN,KAAiBd,KAApB,EAA2B;AACzB,eAAO,KAAP;AACD;;AACD,UAAGU,KAAK,CAACI,MAAT,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,qBAAyBN,KAAK,CAACI,MAA/B;AACA,eAAOJ,KAAP;AACD;;AAED,aAAO,KAAP;AACD,KAlBI;AAmBLO,IAAAA,KAnBK,iBAmBCrB,QAnBD,EAmBWsB,QAnBX,SAmB+B;AAAA,UAARrB,IAAQ,SAARA,IAAQ;AAClC,UAAMsB,MAAM,GAAGvB,QAAQ,GAAGA,QAAQ,CAACe,KAAT,CAAe,CAAf,CAAH,GAAuB,EAA9C;AAED;AAtBI,GAAP;AAwBD","sourcesContent":["import gql from \"graphql-tag\";\nimport { PAGINATION_QUERY } from \"../components/Pagination\";\n\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read(existing = [], { args, cache }) {\n      const { skip, first } = args;\n      const data = cache.readQuery({ query: PAGINATION_QUERY });\n      const count = data?._allGuitarsMeta?.count;\n      const page = skip / first + 1;\n      const pages = Math.ceil(count / first);\n      const items = existing.slice(skip, skip + first).filter((x) => x);\n      if(items.length !== first) {\n        return false;\n      }\n      if(items.length) {\n        console.log(`There are ${items.length} in the cache! Sending them to apollo`)\n        return items;\n      }\n\n      return false;\n    },\n    merge(existing, incoming, { args }) {\n      const merged = existing ? existing.slice(0) : [];\n\n    }, \n  };\n}\n"]},"metadata":{},"sourceType":"module"}