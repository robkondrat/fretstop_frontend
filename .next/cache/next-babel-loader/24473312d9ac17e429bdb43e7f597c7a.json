{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from './styles/SickButton';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);background:var(--lightBlue);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction Checkout() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault(); // 2. start page transition\n    // 3. create payment method via stripe (token comes back here if successful)\n    // 4. handle any errors from stripe \n    // 5. send token to keystone server via a custom mutation\n    // 6. change the page to view the order\n    // 7. close the cart\n    // 8. turn the loader off\n  }\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n        children: \"Check Out Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"5EiSSC9bMW8YaQMSdWKh/GfTbkQ=\");\n\n_c2 = Checkout;\nexport { Checkout };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"Checkout\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Checkout.js"],"names":["CardElement","Elements","loadStripe","useState","styled","SickButton","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","Checkout","error","setError","loading","setLoading","handleSubmit","e","preventDefault"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,yBAAtC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAMC,kBAAkB,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,0KAAxB;KAAMD,kB;AAYN,IAAME,SAAS,GAAGN,UAAU,CAACO,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACQT,QAAQ,EADhB;AAAA,MACXU,KADW;AAAA,MACJC,QADI;;AAAA,mBAEYX,QAAQ,CAAC,KAAD,CAFpB;AAAA,MAEXY,OAFW;AAAA,MAEFC,UAFE;;AAIlB,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;AACD,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEX,SAAlB;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAES,YAA9B;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxBQL,Q;;MAAAA,Q;AA0BT,SAASA,QAAT","sourcesContent":["import { CardElement, Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from './styles/SickButton';\n\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  /* background: var(--offWhite); */\n  background: var(--lightBlue);\n\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction Checkout() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n    // 1. stop form from submitting and turn loader on\n    e.preventDefault();\n    // 2. start page transition\n    // 3. create payment method via stripe (token comes back here if successful)\n    // 4. handle any errors from stripe \n    // 5. send token to keystone server via a custom mutation\n    // 6. change the page to view the order\n    // 7. close the cart\n    // 8. turn the loader off\n    \n  }\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutFormStyles onSubmit={handleSubmit}>\n        <CardElement />\n        <SickButton>Check Out Now</SickButton>\n      </CheckoutFormStyles>\n    </Elements>\n  );\n}\n\nexport { Checkout };\n"]},"metadata":{},"sourceType":"module"}