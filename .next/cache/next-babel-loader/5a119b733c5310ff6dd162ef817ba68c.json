{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nconst SEARCH_GUITARS_QUERY = gql`\n  query SEARCH_GUITARS_QUERY($searchTerm: String!) {\n    searchTerms: allGuitars(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_GUITARS_QUERY, {\n    fetchPolicy: \"no-cache\"\n  });\n  const items = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  console.log(items);\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps\n  } = useCombobox({\n    items,\n\n    onInputValueChange() {\n      console.log(\"Input changed!\");\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log(\"Selected Item changed!\");\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: \"search\",\n        placeholder: \"Search for an item\",\n        id: \"search\",\n        className: loading ? \"loading\" : \"\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(DropDownItem, _objectSpread(_objectSpread({}, getItemProps({\n        item: item\n      })), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photo.image.publicUrlTransformed,\n          alt: item.name,\n          width: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), item.name]\n      }), item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_GUITARS_QUERY","Search","findItems","loading","data","error","fetchPolicy","items","searchTerms","console","log","findItemsButChill","inputValue","getMenuProps","getInputProps","getComboboxProps","getItemProps","onInputValueChange","variables","searchTerm","onSelectedItemChange","type","placeholder","id","className","map","item","photo","image","publicUrlTransformed","name"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,oBAAoB,GAAGL,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASM,MAAT,GAAkB;AAC/B,QAAM,CAACC,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAZ,IAAwCb,YAAY,CACxDQ,oBADwD,EAExD;AACEM,IAAAA,WAAW,EAAE;AADf,GAFwD,CAA1D;AAMA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMI,iBAAiB,GAAGf,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACAT,EAAAA,cAAc;AACd,QAAM;AACJmB,IAAAA,UADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA;AALI,MAMFtB,WAAW,CAAC;AACda,IAAAA,KADc;;AAEdU,IAAAA,kBAAkB,GAAG;AACnBR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,MAAAA,iBAAiB,CAAC;AAChBO,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAEP;AADH;AADK,OAAD,CAAjB;AAKD,KATa;;AAUdQ,IAAAA,oBAAoB,GAAG;AACrBX,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAZa,GAAD,CANf;AAoBA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASK,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBO,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAErB,OAAO,GAAG,SAAH,GAAe;AAJjB,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAcU,YAAY,EAA1B;AAAA,gBACGN,KAAK,CAACkB,GAAN,CAAWC,IAAD,iBACT,QAAC,YAAD,kCAAgCV,YAAY,CAAC;AAAEU,QAAAA,IAAI,EAAEA;AAAR,OAAD,CAA5C;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,oBADxB;AAEE,UAAA,GAAG,EAAEH,IAAI,CAACI,IAFZ;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGJ,IAAI,CAACI,IANR;AAAA,UAAmBJ,IAAI,CAACH,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD","sourcesContent":["import { useLazyQuery } from \"@apollo/client\";\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\n\nconst SEARCH_GUITARS_QUERY = gql`\n  query SEARCH_GUITARS_QUERY($searchTerm: String!) {\n    searchTerms: allGuitars(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Search() {\n  const [findItems, { loading, data, error }] = useLazyQuery(\n    SEARCH_GUITARS_QUERY,\n    {\n      fetchPolicy: \"no-cache\",\n    }\n  );\n  const items = data?.searchTerms || [];\n  console.log(items);\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    inputValue,\n    getMenuProps,\n    getInputProps,\n    getComboboxProps,\n    getItemProps,\n  } = useCombobox({\n    items,\n    onInputValueChange() {\n      console.log(\"Input changed!\");\n      findItemsButChill({\n        variables: {\n          searchTerm: inputValue,\n        },\n      });\n    },\n    onSelectedItemChange() {\n      console.log(\"Selected Item changed!\");\n    },\n  });\n  return (\n    <SearchStyles>\n      <div {...getComboboxProps()}>\n        <input\n          {...getInputProps({\n            type: \"search\",\n            placeholder: \"Search for an item\",\n            id: \"search\",\n            className: loading ? \"loading\" : \"\",\n          })}\n        />\n      </div>\n      <DropDown {...getMenuProps()}>\n        {items.map((item) => (\n          <DropDownItem key={item.id} {...getItemProps({ item: item })} >\n            <img\n              src={item.photo.image.publicUrlTransformed}\n              alt={item.name}\n              width=\"50px\"\n            />\n            {item.name}\n          </DropDownItem>\n        ))}\n      </DropDown>\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}