{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nexport default function UpdateGuitar({\n  id\n}) {\n  // 1. need to get existing guitar\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id\n    }\n  }); // 2. need to get mutation to update the guitar\n  // 3. need the form to handle the updates\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update \", id, \"!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/UpdateGuitar.js"],"names":["useQuery","gql","SINGLE_GUITAR_QUERY","UpdateGuitar","id","data","error","loading","variables"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,mBAAmB,GAAGD,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASE,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA8B;AAC3C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACE,mBAAD,EAAsB;AAAEM,IAAAA,SAAS,EAAE;AAC1EJ,MAAAA,EAAE,EAAEA;AADsE;AAAb,GAAtB,CAAzC,CAF2C,CAK3C;AACA;;AACA,sBACE;AAAA,0BAAWA,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\"\n\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\n\nexport default function UpdateGuitar({ id }) {\n  // 1. need to get existing guitar\n  const { data, error, loading } = useQuery(SINGLE_GUITAR_QUERY, { variables: {\n    id: id \n  }})\n  // 2. need to get mutation to update the guitar\n  // 3. need the form to handle the updates\n  return (\n    <p>Update {id}!</p>\n  )\n}"]},"metadata":{},"sourceType":"module"}