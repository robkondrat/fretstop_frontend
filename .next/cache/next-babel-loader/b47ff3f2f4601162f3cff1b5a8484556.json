{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SingleGuitar.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_GUITAR_QUERY($id: ID!) {\\n    Guitar(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      id\\n      photo {\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-auto-columns: 1fr;\\n  grid-auto-flow: column;\\n  max-width: var(--maxWidth);\\n  justify-content: center;\\n  align-items: top;\\n  gap: 2rem;\\n  img {\\n    width: 100%;\\n    max-height: 500px;\\n    object-fit: contain;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nimport Head from 'next/head';\nimport styled from \"styled-components\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from '../lib/formatMoney';\nvar GuitarStyles = styled.div(_templateObject());\n_c = GuitarStyles;\nvar SINGLE_GUITAR_QUERY = gql(_templateObject2());\nexport default function SingleGuitar(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  var Guitar = data.Guitar;\n  return /*#__PURE__*/_jsxDEV(GuitarStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Fret Stop | \", Guitar.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Guitar.photo.image.publicUrlTransformed,\n      alt: Guitar.photo.altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Guitar.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Guitar.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formatMoney(Guitar.price)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleGuitar, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = SingleGuitar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GuitarStyles\");\n$RefreshReg$(_c2, \"SingleGuitar\");","map":{"version":3,"sources":["/Users/robkondratowicz/Desktop/Actualize/fretstop_frontend/components/SingleGuitar.js"],"names":["useQuery","gql","DisplayError","Head","styled","PriceTag","formatMoney","GuitarStyles","div","SINGLE_GUITAR_QUERY","SingleGuitar","id","variables","data","loading","error","Guitar","name","photo","image","publicUrlTransformed","altText","description","price"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAGA,IAAMC,YAAY,GAAGH,MAAM,CAACI,GAAV,mBAAlB;KAAMD,Y;AAgBN,IAAME,mBAAmB,GAAGR,GAAH,oBAAzB;AAiBA,eAAe,SAASS,YAAT,OAA8B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACVX,QAAQ,CAACS,mBAAD,EAAsB;AAC7DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAEA;AADK;AADkD,GAAtB,CADE;AAAA,MACnCE,IADmC,aACnCA,IADmC;AAAA,MAC7BC,OAD6B,aAC7BA,OAD6B;AAAA,MACpBC,KADoB,aACpBA,KADoB;;AAM3C,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAPgC,MAQnCC,MARmC,GAQxBH,IARwB,CAQnCG,MARmC;AAS3C,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,mCACeA,MAAM,CAACC,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,GAAG,EAAED,MAAM,CAACE,KAAP,CAAaC,KAAb,CAAmBC,oBAA7B;AAAmD,MAAA,GAAG,EAAEJ,MAAM,CAACE,KAAP,CAAaG;AAArE;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKL,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,MAAM,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAWI;AAAA,gBAAIhB,WAAW,CAACU,MAAM,CAACO,KAAR;AAAf;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxBuBb,Y;UACWV,Q;;;MADXU,Y","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nimport Head from 'next/head';\nimport styled from \"styled-components\";\nimport PriceTag from \"./styles/PriceTag\";\nimport formatMoney from '../lib/formatMoney';\n\n\nconst GuitarStyles = styled.div`\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  max-width: var(--maxWidth);\n  justify-content: center;\n  align-items: top;\n  gap: 2rem;\n  img {\n    width: 100%;\n    max-height: 500px;\n    object-fit: contain;\n  }\n`;\n\n\nconst SINGLE_GUITAR_QUERY = gql`\n  query SINGLE_GUITAR_QUERY($id: ID!) {\n    Guitar(where: { id: $id }) {\n      name\n      price\n      description\n      id\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function SingleGuitar({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_GUITAR_QUERY, {\n    variables: {\n      id: id,\n    },\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <DisplayError error={error} />;\n  const { Guitar } = data;\n  return (\n    <GuitarStyles>\n      <Head>\n        <title>\n          Fret Stop | {Guitar.name}\n        </title>\n      </Head>\n      <img src={Guitar.photo.image.publicUrlTransformed} alt={Guitar.photo.altText} />\n      <div className=\"details\">\n        <h2>{Guitar.name}</h2>\n        <p>{Guitar.description}</p>\n      </div>\n        <p>{formatMoney(Guitar.price)}</p>\n    </GuitarStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}